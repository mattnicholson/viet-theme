---
permalink: /spec/
eleventyExcludeFromCollections: true
---
{% extends "src/theme/inc/theme.njk" %}
{%  block body %}
{# 

	Call theme components programmatically...

#}

<div x-data="{
        search: new URLSearchParams(window.location.search).get('search') || '',
        updateSearchParam(event) {
            this.search = event.target.value;
            const url = new URL(window.location);
            if (this.search) {
                url.searchParams.set('search', this.search);
            } else {
                url.searchParams.delete('search');
            }
            window.history.pushState({}, '', url);
            window.scrollTo(0,0);
        }
    }">

     <select class="fixed bottom-inset left-1/2 -translate-x-1/2 z-[5] rounded-md shadow-md px-2 border border-[1px]" @change="updateSearchParam($event)">
            <option value="" x-text="search === '' ? 'Filter spec...' : 'All'"></option>
            {% for key, c in components %}
                {% if key != 'example' %}
                    <option value="{{ key }}" x-bind:selected="search === '{{ key }}'">{{ key }}</option>
                {% endif %}
            {% endfor %}
        </select>

{%  for key,c in components %}
	{% if key != 'example' %}
	<template x-if="!search || search === '{{ key }}'">
	<div>
	{%  if c.modifiers | length %}
		{% for m in c.modifiers %}
			<h3 class="p-4 uppercase font-mono text-[12px]">{{ key }} / {{ m }}</h3>
			{%  set props = c.defaultProps %}
			{%  set props = props | setAttribute('modifier', m) %}

			{%  if c.wrapper %}
				{% if c.wrapperModifiers | length %}
					{% for w in c.wrapperModifiers %}
						
						<h3 class="p-4 uppercase font-mono text-[12px]">{{ key }} wrapper: {{ w }}</h3>
						{# Translate to prevent fixed position #}
						<div class="translate-x-0 relative min-h-[10vmax]">
						{{ c.wrapper({
							modifier:w,
							content: c.render(props)
						}) }}
						</div>
					{%  endfor %}
				{% else %}
					{# Translate to prevent fixed position #}
					<div class="translate-x-0 relative min-h-[10vmax]">
					{{ c.wrapper({
						content: c.render(props)
					}) }}
					</div>
				{% endif %}
			{%  else %}
				{{ c.render(props) }}
			{%  endif %}
			
			<hr class="my-4" />
		{% endfor %}
	{%  else %}
	<h3 class="p-4 uppercase font-mono text-[12px]">{{ key }}</h3>
	
	{% if c.wrapper %}
			{{ c.wrapper({
				content: c.render(c.defaultProps)
			}) }}
		{%  else %}
			{{ c.render(c.defaultProps) }}
		{%  endif %}
	<hr class="my-4" />

	{%  endif %}
	</div>
	</template>
	{%  endif %}
{% endfor %}
</div>



{# 

	You can call theme components arbitrarily...
	eg

	{{  components.example.render() }}

	or using the global getter (useful when inside another component)

	{{  _('example').render() }}

#}
{%  endblock %}